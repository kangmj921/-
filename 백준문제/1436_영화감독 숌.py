# 666이 들어간 수를 1부터 시작해서 666이 들어간 N번째 수를 찾는 순간까지 찾는 방식은
# 최대 10000번째의 666이 들어간 수의 자리수가 K 이면 최대 시간복잡도는 O(K * (10 ** K)) 만큼 된다.
# 따라서 문제에서 주어지는 10000번째의 666이 들어간 수를 모르기 때문에
# N이 크면 클수록 비효율적이다.

# 따라서 더 효율적으로 탐색을 하려면, 666이 들어간 경우만 탐색할 경우인데,
# 각 자리수 마다 666 앞이나 뒤에 어떤식으로 수가 추가될 수 있을지 규칙을 찾아서 리스트에 추가한 뒤
# 작은 순으로 정렬하면 N 번째의 666이 들어간 수를 찾을 수 있을 것이다.

N = int(input())
# 1 <= N <= 10000
c = []
i = 666
while len(c) < N:
    if '666' in str(i):
        c.append(i)
    i += 1
print(c[N - 1])
